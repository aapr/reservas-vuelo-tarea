#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reservas_Vuelo.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Reservas_Vuelo")]
	public partial class DataClassesReservasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertASIENTO_AVION(ASIENTO_AVION instance);
    partial void UpdateASIENTO_AVION(ASIENTO_AVION instance);
    partial void DeleteASIENTO_AVION(ASIENTO_AVION instance);
    partial void InsertVUELO(VUELO instance);
    partial void UpdateVUELO(VUELO instance);
    partial void DeleteVUELO(VUELO instance);
    partial void InsertASIENTO_VIAJE(ASIENTO_VIAJE instance);
    partial void UpdateASIENTO_VIAJE(ASIENTO_VIAJE instance);
    partial void DeleteASIENTO_VIAJE(ASIENTO_VIAJE instance);
    partial void InsertAVION(AVION instance);
    partial void UpdateAVION(AVION instance);
    partial void DeleteAVION(AVION instance);
    partial void InsertCIUDAD(CIUDAD instance);
    partial void UpdateCIUDAD(CIUDAD instance);
    partial void DeleteCIUDAD(CIUDAD instance);
    partial void InsertVENTA(VENTA instance);
    partial void UpdateVENTA(VENTA instance);
    partial void DeleteVENTA(VENTA instance);
    partial void InsertVIAJE(VIAJE instance);
    partial void UpdateVIAJE(VIAJE instance);
    partial void DeleteVIAJE(VIAJE instance);
    #endregion
		
		public DataClassesReservasDataContext() : 
				base(global::Reservas_Vuelo.DataLayer.Properties.Settings.Default.Reservas_VueloConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesReservasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesReservasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesReservasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesReservasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ASIENTO_AVION> ASIENTO_AVIONs
		{
			get
			{
				return this.GetTable<ASIENTO_AVION>();
			}
		}
		
		public System.Data.Linq.Table<VUELO> VUELOs
		{
			get
			{
				return this.GetTable<VUELO>();
			}
		}
		
		public System.Data.Linq.Table<ASIENTO_VIAJE> ASIENTO_VIAJEs
		{
			get
			{
				return this.GetTable<ASIENTO_VIAJE>();
			}
		}
		
		public System.Data.Linq.Table<ASIENTOS_VENTA> ASIENTOS_VENTAs
		{
			get
			{
				return this.GetTable<ASIENTOS_VENTA>();
			}
		}
		
		public System.Data.Linq.Table<AVION> AVIONs
		{
			get
			{
				return this.GetTable<AVION>();
			}
		}
		
		public System.Data.Linq.Table<CIUDAD> CIUDADs
		{
			get
			{
				return this.GetTable<CIUDAD>();
			}
		}
		
		public System.Data.Linq.Table<VENTA> VENTAs
		{
			get
			{
				return this.GetTable<VENTA>();
			}
		}
		
		public System.Data.Linq.Table<VIAJE> VIAJEs
		{
			get
			{
				return this.GetTable<VIAJE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASIENTO_AVION")]
	public partial class ASIENTO_AVION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_AVION;
		
		private string _DESCRIPCION;
		
		private EntitySet<ASIENTO_VIAJE> _ASIENTO_VIAJEs;
		
		private EntityRef<AVION> _AVION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_AVIONChanging(System.Nullable<int> value);
    partial void OnID_AVIONChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public ASIENTO_AVION()
		{
			this._ASIENTO_VIAJEs = new EntitySet<ASIENTO_VIAJE>(new Action<ASIENTO_VIAJE>(this.attach_ASIENTO_VIAJEs), new Action<ASIENTO_VIAJE>(this.detach_ASIENTO_VIAJEs));
			this._AVION = default(EntityRef<AVION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AVION", DbType="Int")]
		public System.Nullable<int> ID_AVION
		{
			get
			{
				return this._ID_AVION;
			}
			set
			{
				if ((this._ID_AVION != value))
				{
					if (this._AVION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AVIONChanging(value);
					this.SendPropertyChanging();
					this._ID_AVION = value;
					this.SendPropertyChanged("ID_AVION");
					this.OnID_AVIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASIENTO_AVION_ASIENTO_VIAJE", Storage="_ASIENTO_VIAJEs", ThisKey="ID", OtherKey="ID_ASIENTO_AVION")]
		public EntitySet<ASIENTO_VIAJE> ASIENTO_VIAJEs
		{
			get
			{
				return this._ASIENTO_VIAJEs;
			}
			set
			{
				this._ASIENTO_VIAJEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_ASIENTO_AVION", Storage="_AVION", ThisKey="ID_AVION", OtherKey="ID", IsForeignKey=true)]
		public AVION AVION
		{
			get
			{
				return this._AVION.Entity;
			}
			set
			{
				AVION previousValue = this._AVION.Entity;
				if (((previousValue != value) 
							|| (this._AVION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVION.Entity = null;
						previousValue.ASIENTO_AVIONs.Remove(this);
					}
					this._AVION.Entity = value;
					if ((value != null))
					{
						value.ASIENTO_AVIONs.Add(this);
						this._ID_AVION = value.ID;
					}
					else
					{
						this._ID_AVION = default(Nullable<int>);
					}
					this.SendPropertyChanged("AVION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.ASIENTO_AVION = this;
		}
		
		private void detach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.ASIENTO_AVION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VUELO")]
	public partial class VUELO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ORIGEN;
		
		private string _DESTINO;
		
		private string _HORA_SALIDA;
		
		private string _HORA_LLEGADA;
		
		private int _ID_AVION;
		
		private EntitySet<ASIENTO_VIAJE> _ASIENTO_VIAJEs;
		
		private EntitySet<VIAJE> _VIAJEs;
		
		private EntityRef<AVION> _AVION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORIGENChanging(string value);
    partial void OnORIGENChanged();
    partial void OnDESTINOChanging(string value);
    partial void OnDESTINOChanged();
    partial void OnHORA_SALIDAChanging(string value);
    partial void OnHORA_SALIDAChanged();
    partial void OnHORA_LLEGADAChanging(string value);
    partial void OnHORA_LLEGADAChanged();
    partial void OnID_AVIONChanging(int value);
    partial void OnID_AVIONChanged();
    #endregion
		
		public VUELO()
		{
			this._ASIENTO_VIAJEs = new EntitySet<ASIENTO_VIAJE>(new Action<ASIENTO_VIAJE>(this.attach_ASIENTO_VIAJEs), new Action<ASIENTO_VIAJE>(this.detach_ASIENTO_VIAJEs));
			this._VIAJEs = new EntitySet<VIAJE>(new Action<VIAJE>(this.attach_VIAJEs), new Action<VIAJE>(this.detach_VIAJEs));
			this._AVION = default(EntityRef<AVION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORIGEN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORIGEN
		{
			get
			{
				return this._ORIGEN;
			}
			set
			{
				if ((this._ORIGEN != value))
				{
					this.OnORIGENChanging(value);
					this.SendPropertyChanging();
					this._ORIGEN = value;
					this.SendPropertyChanged("ORIGEN");
					this.OnORIGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESTINO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESTINO
		{
			get
			{
				return this._DESTINO;
			}
			set
			{
				if ((this._DESTINO != value))
				{
					this.OnDESTINOChanging(value);
					this.SendPropertyChanging();
					this._DESTINO = value;
					this.SendPropertyChanged("DESTINO");
					this.OnDESTINOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA_SALIDA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HORA_SALIDA
		{
			get
			{
				return this._HORA_SALIDA;
			}
			set
			{
				if ((this._HORA_SALIDA != value))
				{
					this.OnHORA_SALIDAChanging(value);
					this.SendPropertyChanging();
					this._HORA_SALIDA = value;
					this.SendPropertyChanged("HORA_SALIDA");
					this.OnHORA_SALIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA_LLEGADA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HORA_LLEGADA
		{
			get
			{
				return this._HORA_LLEGADA;
			}
			set
			{
				if ((this._HORA_LLEGADA != value))
				{
					this.OnHORA_LLEGADAChanging(value);
					this.SendPropertyChanging();
					this._HORA_LLEGADA = value;
					this.SendPropertyChanged("HORA_LLEGADA");
					this.OnHORA_LLEGADAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AVION", DbType="Int NOT NULL")]
		public int ID_AVION
		{
			get
			{
				return this._ID_AVION;
			}
			set
			{
				if ((this._ID_AVION != value))
				{
					if (this._AVION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AVIONChanging(value);
					this.SendPropertyChanging();
					this._ID_AVION = value;
					this.SendPropertyChanged("ID_AVION");
					this.OnID_AVIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VUELO_ASIENTO_VIAJE", Storage="_ASIENTO_VIAJEs", ThisKey="ID", OtherKey="ID_VUELO")]
		public EntitySet<ASIENTO_VIAJE> ASIENTO_VIAJEs
		{
			get
			{
				return this._ASIENTO_VIAJEs;
			}
			set
			{
				this._ASIENTO_VIAJEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VUELO_VIAJE", Storage="_VIAJEs", ThisKey="ID", OtherKey="ID_VUELO")]
		public EntitySet<VIAJE> VIAJEs
		{
			get
			{
				return this._VIAJEs;
			}
			set
			{
				this._VIAJEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_VUELO", Storage="_AVION", ThisKey="ID_AVION", OtherKey="ID", IsForeignKey=true)]
		public AVION AVION
		{
			get
			{
				return this._AVION.Entity;
			}
			set
			{
				AVION previousValue = this._AVION.Entity;
				if (((previousValue != value) 
							|| (this._AVION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVION.Entity = null;
						previousValue.VUELOs.Remove(this);
					}
					this._AVION.Entity = value;
					if ((value != null))
					{
						value.VUELOs.Add(this);
						this._ID_AVION = value.ID;
					}
					else
					{
						this._ID_AVION = default(int);
					}
					this.SendPropertyChanged("AVION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VUELO = this;
		}
		
		private void detach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VUELO = null;
		}
		
		private void attach_VIAJEs(VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VUELO = this;
		}
		
		private void detach_VIAJEs(VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VUELO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASIENTO_VIAJE")]
	public partial class ASIENTO_VIAJE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_VIAJE;
		
		private int _ID_ASIENTO_AVION;
		
		private int _ID_VUELO;
		
		private int _ID_AVION;
		
		private EntityRef<ASIENTO_AVION> _ASIENTO_AVION;
		
		private EntityRef<VUELO> _VUELO;
		
		private EntityRef<AVION> _AVION;
		
		private EntityRef<VIAJE> _VIAJE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_VIAJEChanging(int value);
    partial void OnID_VIAJEChanged();
    partial void OnID_ASIENTO_AVIONChanging(int value);
    partial void OnID_ASIENTO_AVIONChanged();
    partial void OnID_VUELOChanging(int value);
    partial void OnID_VUELOChanged();
    partial void OnID_AVIONChanging(int value);
    partial void OnID_AVIONChanged();
    #endregion
		
		public ASIENTO_VIAJE()
		{
			this._ASIENTO_AVION = default(EntityRef<ASIENTO_AVION>);
			this._VUELO = default(EntityRef<VUELO>);
			this._AVION = default(EntityRef<AVION>);
			this._VIAJE = default(EntityRef<VIAJE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VIAJE", DbType="Int NOT NULL")]
		public int ID_VIAJE
		{
			get
			{
				return this._ID_VIAJE;
			}
			set
			{
				if ((this._ID_VIAJE != value))
				{
					if (this._VIAJE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VIAJEChanging(value);
					this.SendPropertyChanging();
					this._ID_VIAJE = value;
					this.SendPropertyChanged("ID_VIAJE");
					this.OnID_VIAJEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ASIENTO_AVION", DbType="Int NOT NULL")]
		public int ID_ASIENTO_AVION
		{
			get
			{
				return this._ID_ASIENTO_AVION;
			}
			set
			{
				if ((this._ID_ASIENTO_AVION != value))
				{
					if (this._ASIENTO_AVION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ASIENTO_AVIONChanging(value);
					this.SendPropertyChanging();
					this._ID_ASIENTO_AVION = value;
					this.SendPropertyChanged("ID_ASIENTO_AVION");
					this.OnID_ASIENTO_AVIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VUELO", DbType="Int NOT NULL")]
		public int ID_VUELO
		{
			get
			{
				return this._ID_VUELO;
			}
			set
			{
				if ((this._ID_VUELO != value))
				{
					if (this._VUELO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VUELOChanging(value);
					this.SendPropertyChanging();
					this._ID_VUELO = value;
					this.SendPropertyChanged("ID_VUELO");
					this.OnID_VUELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AVION", DbType="Int NOT NULL")]
		public int ID_AVION
		{
			get
			{
				return this._ID_AVION;
			}
			set
			{
				if ((this._ID_AVION != value))
				{
					if (this._AVION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AVIONChanging(value);
					this.SendPropertyChanging();
					this._ID_AVION = value;
					this.SendPropertyChanged("ID_AVION");
					this.OnID_AVIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASIENTO_AVION_ASIENTO_VIAJE", Storage="_ASIENTO_AVION", ThisKey="ID_ASIENTO_AVION", OtherKey="ID", IsForeignKey=true)]
		public ASIENTO_AVION ASIENTO_AVION
		{
			get
			{
				return this._ASIENTO_AVION.Entity;
			}
			set
			{
				ASIENTO_AVION previousValue = this._ASIENTO_AVION.Entity;
				if (((previousValue != value) 
							|| (this._ASIENTO_AVION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASIENTO_AVION.Entity = null;
						previousValue.ASIENTO_VIAJEs.Remove(this);
					}
					this._ASIENTO_AVION.Entity = value;
					if ((value != null))
					{
						value.ASIENTO_VIAJEs.Add(this);
						this._ID_ASIENTO_AVION = value.ID;
					}
					else
					{
						this._ID_ASIENTO_AVION = default(int);
					}
					this.SendPropertyChanged("ASIENTO_AVION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VUELO_ASIENTO_VIAJE", Storage="_VUELO", ThisKey="ID_VUELO", OtherKey="ID", IsForeignKey=true)]
		public VUELO VUELO
		{
			get
			{
				return this._VUELO.Entity;
			}
			set
			{
				VUELO previousValue = this._VUELO.Entity;
				if (((previousValue != value) 
							|| (this._VUELO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VUELO.Entity = null;
						previousValue.ASIENTO_VIAJEs.Remove(this);
					}
					this._VUELO.Entity = value;
					if ((value != null))
					{
						value.ASIENTO_VIAJEs.Add(this);
						this._ID_VUELO = value.ID;
					}
					else
					{
						this._ID_VUELO = default(int);
					}
					this.SendPropertyChanged("VUELO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_ASIENTO_VIAJE", Storage="_AVION", ThisKey="ID_AVION", OtherKey="ID", IsForeignKey=true)]
		public AVION AVION
		{
			get
			{
				return this._AVION.Entity;
			}
			set
			{
				AVION previousValue = this._AVION.Entity;
				if (((previousValue != value) 
							|| (this._AVION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVION.Entity = null;
						previousValue.ASIENTO_VIAJEs.Remove(this);
					}
					this._AVION.Entity = value;
					if ((value != null))
					{
						value.ASIENTO_VIAJEs.Add(this);
						this._ID_AVION = value.ID;
					}
					else
					{
						this._ID_AVION = default(int);
					}
					this.SendPropertyChanged("AVION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIAJE_ASIENTO_VIAJE", Storage="_VIAJE", ThisKey="ID_VIAJE", OtherKey="ID", IsForeignKey=true)]
		public VIAJE VIAJE
		{
			get
			{
				return this._VIAJE.Entity;
			}
			set
			{
				VIAJE previousValue = this._VIAJE.Entity;
				if (((previousValue != value) 
							|| (this._VIAJE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VIAJE.Entity = null;
						previousValue.ASIENTO_VIAJEs.Remove(this);
					}
					this._VIAJE.Entity = value;
					if ((value != null))
					{
						value.ASIENTO_VIAJEs.Add(this);
						this._ID_VIAJE = value.ID;
					}
					else
					{
						this._ID_VIAJE = default(int);
					}
					this.SendPropertyChanged("VIAJE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASIENTOS_VENTA")]
	public partial class ASIENTOS_VENTA
	{
		
		private int _ID_VENTAS;
		
		private int _ID_ASIENTOS_VIAJES;
		
		public ASIENTOS_VENTA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VENTAS", DbType="Int NOT NULL")]
		public int ID_VENTAS
		{
			get
			{
				return this._ID_VENTAS;
			}
			set
			{
				if ((this._ID_VENTAS != value))
				{
					this._ID_VENTAS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ASIENTOS_VIAJES", DbType="Int NOT NULL")]
		public int ID_ASIENTOS_VIAJES
		{
			get
			{
				return this._ID_ASIENTOS_VIAJES;
			}
			set
			{
				if ((this._ID_ASIENTOS_VIAJES != value))
				{
					this._ID_ASIENTOS_VIAJES = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVION")]
	public partial class AVION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<ASIENTO_AVION> _ASIENTO_AVIONs;
		
		private EntitySet<VUELO> _VUELOs;
		
		private EntitySet<ASIENTO_VIAJE> _ASIENTO_VIAJEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public AVION()
		{
			this._ASIENTO_AVIONs = new EntitySet<ASIENTO_AVION>(new Action<ASIENTO_AVION>(this.attach_ASIENTO_AVIONs), new Action<ASIENTO_AVION>(this.detach_ASIENTO_AVIONs));
			this._VUELOs = new EntitySet<VUELO>(new Action<VUELO>(this.attach_VUELOs), new Action<VUELO>(this.detach_VUELOs));
			this._ASIENTO_VIAJEs = new EntitySet<ASIENTO_VIAJE>(new Action<ASIENTO_VIAJE>(this.attach_ASIENTO_VIAJEs), new Action<ASIENTO_VIAJE>(this.detach_ASIENTO_VIAJEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_ASIENTO_AVION", Storage="_ASIENTO_AVIONs", ThisKey="ID", OtherKey="ID_AVION")]
		public EntitySet<ASIENTO_AVION> ASIENTO_AVIONs
		{
			get
			{
				return this._ASIENTO_AVIONs;
			}
			set
			{
				this._ASIENTO_AVIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_VUELO", Storage="_VUELOs", ThisKey="ID", OtherKey="ID_AVION")]
		public EntitySet<VUELO> VUELOs
		{
			get
			{
				return this._VUELOs;
			}
			set
			{
				this._VUELOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVION_ASIENTO_VIAJE", Storage="_ASIENTO_VIAJEs", ThisKey="ID", OtherKey="ID_AVION")]
		public EntitySet<ASIENTO_VIAJE> ASIENTO_VIAJEs
		{
			get
			{
				return this._ASIENTO_VIAJEs;
			}
			set
			{
				this._ASIENTO_VIAJEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIENTO_AVIONs(ASIENTO_AVION entity)
		{
			this.SendPropertyChanging();
			entity.AVION = this;
		}
		
		private void detach_ASIENTO_AVIONs(ASIENTO_AVION entity)
		{
			this.SendPropertyChanging();
			entity.AVION = null;
		}
		
		private void attach_VUELOs(VUELO entity)
		{
			this.SendPropertyChanging();
			entity.AVION = this;
		}
		
		private void detach_VUELOs(VUELO entity)
		{
			this.SendPropertyChanging();
			entity.AVION = null;
		}
		
		private void attach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.AVION = this;
		}
		
		private void detach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.AVION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CIUDAD")]
	public partial class CIUDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private string _CODIGO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    #endregion
		
		public CIUDAD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VENTA")]
	public partial class VENTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private string _APELLIDO;
		
		private string _TARJETA;
		
		private string _CCV;
		
		private System.Nullable<decimal> _EXPE;
		
		private string _DIR_COBRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPELLIDOChanging(string value);
    partial void OnAPELLIDOChanged();
    partial void OnTARJETAChanging(string value);
    partial void OnTARJETAChanged();
    partial void OnCCVChanging(string value);
    partial void OnCCVChanged();
    partial void OnEXPEChanging(System.Nullable<decimal> value);
    partial void OnEXPEChanged();
    partial void OnDIR_COBROChanging(string value);
    partial void OnDIR_COBROChanged();
    #endregion
		
		public VENTA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string APELLIDO
		{
			get
			{
				return this._APELLIDO;
			}
			set
			{
				if ((this._APELLIDO != value))
				{
					this.OnAPELLIDOChanging(value);
					this.SendPropertyChanging();
					this._APELLIDO = value;
					this.SendPropertyChanged("APELLIDO");
					this.OnAPELLIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARJETA", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string TARJETA
		{
			get
			{
				return this._TARJETA;
			}
			set
			{
				if ((this._TARJETA != value))
				{
					this.OnTARJETAChanging(value);
					this.SendPropertyChanging();
					this._TARJETA = value;
					this.SendPropertyChanged("TARJETA");
					this.OnTARJETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCV", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CCV
		{
			get
			{
				return this._CCV;
			}
			set
			{
				if ((this._CCV != value))
				{
					this.OnCCVChanging(value);
					this.SendPropertyChanging();
					this._CCV = value;
					this.SendPropertyChanged("CCV");
					this.OnCCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPE", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> EXPE
		{
			get
			{
				return this._EXPE;
			}
			set
			{
				if ((this._EXPE != value))
				{
					this.OnEXPEChanging(value);
					this.SendPropertyChanging();
					this._EXPE = value;
					this.SendPropertyChanged("EXPE");
					this.OnEXPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIR_COBRO", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DIR_COBRO
		{
			get
			{
				return this._DIR_COBRO;
			}
			set
			{
				if ((this._DIR_COBRO != value))
				{
					this.OnDIR_COBROChanging(value);
					this.SendPropertyChanging();
					this._DIR_COBRO = value;
					this.SendPropertyChanged("DIR_COBRO");
					this.OnDIR_COBROChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIAJE")]
	public partial class VIAJE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_VUELO;
		
		private System.DateTime _FECHA;
		
		private EntitySet<ASIENTO_VIAJE> _ASIENTO_VIAJEs;
		
		private EntityRef<VUELO> _VUELO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_VUELOChanging(int value);
    partial void OnID_VUELOChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    #endregion
		
		public VIAJE()
		{
			this._ASIENTO_VIAJEs = new EntitySet<ASIENTO_VIAJE>(new Action<ASIENTO_VIAJE>(this.attach_ASIENTO_VIAJEs), new Action<ASIENTO_VIAJE>(this.detach_ASIENTO_VIAJEs));
			this._VUELO = default(EntityRef<VUELO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VUELO", DbType="Int NOT NULL")]
		public int ID_VUELO
		{
			get
			{
				return this._ID_VUELO;
			}
			set
			{
				if ((this._ID_VUELO != value))
				{
					if (this._VUELO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VUELOChanging(value);
					this.SendPropertyChanging();
					this._ID_VUELO = value;
					this.SendPropertyChanged("ID_VUELO");
					this.OnID_VUELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date NOT NULL")]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIAJE_ASIENTO_VIAJE", Storage="_ASIENTO_VIAJEs", ThisKey="ID", OtherKey="ID_VIAJE")]
		public EntitySet<ASIENTO_VIAJE> ASIENTO_VIAJEs
		{
			get
			{
				return this._ASIENTO_VIAJEs;
			}
			set
			{
				this._ASIENTO_VIAJEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VUELO_VIAJE", Storage="_VUELO", ThisKey="ID_VUELO", OtherKey="ID", IsForeignKey=true)]
		public VUELO VUELO
		{
			get
			{
				return this._VUELO.Entity;
			}
			set
			{
				VUELO previousValue = this._VUELO.Entity;
				if (((previousValue != value) 
							|| (this._VUELO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VUELO.Entity = null;
						previousValue.VIAJEs.Remove(this);
					}
					this._VUELO.Entity = value;
					if ((value != null))
					{
						value.VIAJEs.Add(this);
						this._ID_VUELO = value.ID;
					}
					else
					{
						this._ID_VUELO = default(int);
					}
					this.SendPropertyChanged("VUELO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VIAJE = this;
		}
		
		private void detach_ASIENTO_VIAJEs(ASIENTO_VIAJE entity)
		{
			this.SendPropertyChanging();
			entity.VIAJE = null;
		}
	}
}
#pragma warning restore 1591
